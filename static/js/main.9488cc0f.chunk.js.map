{"version":3,"sources":["components/Good.js","serviceWorker.js","index.js","App.js"],"names":["Good","props","className","href","productLink","src","imgUrl","alt","price","money","productName","Boolean","window","location","hostname","match","ReactDOM","render","products","id","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2OAEe,SAASA,EAAKC,GACzB,OACI,yBAAKC,UAAU,kBACf,iCAEA,uBAAGC,KAAMF,EAAMG,aACf,yBAAKC,IAAKJ,EAAMK,OAAQC,IAAI,KAAI,6BAC7B,yBAAKL,UAAU,eAAf,IAA8B,gCAASD,EAAMO,OAC5C,wCACA,8BAAOP,EAAMQ,QACZ,6BAAMR,EAAMS,gBCALC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCDD,WAEb,IAAMC,EAAW,CAEf,CAACC,GAAG,EAAGb,OAAO,2FAA4FE,MAAM,IAAKE,YAAY,0BAA2BN,YAAa,wGACzK,CAACe,GAAG,EAAEb,OAAO,2FAA4FE,MAAM,IAAKE,YAAY,mBAAoBN,YAAa,6FACjK,CAACe,GAAG,EAAEb,OAAO,0FAA2FE,MAAM,GAAIE,YAAY,OAAQN,YAAa,kGACnJ,CAACe,GAAG,EAAEb,OAAO,0FAA2FE,MAAM,KAAME,YAAY,+DAA6BN,YAAa,iHAI5K,OACE,6BAEF,yBAAKF,UAAY,aAAY,kNAC3B,yBAAKA,UAAU,SACb,kBAACF,EAAD,CAAOM,OAAWY,EAAS,GAAGZ,OAASE,MAASU,EAAS,GAAGV,MAAQE,YAAcQ,EAAS,GAAGR,YAAaN,YAAec,EAAS,GAAGd,cACtI,kBAACJ,EAAD,CAAOM,OAAWY,EAAS,GAAGZ,OAASE,MAASU,EAAS,GAAGV,MAAQE,YAAcQ,EAAS,GAAGR,YAAaN,YAAec,EAAS,GAAGd,cACtI,kBAACJ,EAAD,CAAOM,OAAWY,EAAS,GAAGZ,OAASE,MAASU,EAAS,GAAGV,MAAQE,YAAcQ,EAAS,GAAGR,YAAaN,YAAec,EAAS,GAAGd,cACtI,kBAACJ,EAAD,CAAOM,OAAWY,EAAS,GAAGZ,OAASE,MAASU,EAAS,GAAGV,MAAQE,YAAcQ,EAAS,GAAGR,YAAaN,YAAec,EAAS,GAAGd,kBDlB5H,MAASgB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9488cc0f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Good(props) {\n    return (\n        <div className=\"productsBorder\">\n        <article>\n           \n        <a href={props.productLink}>\n        <img src={props.imgUrl} alt=\"\"/><br/>\n           <div className=\"colorAmount\"> <strong>{props.price}</strong>\n            <span>₽</span>\n            <span>{props.money}</span></div>\n             <div>{props.productName}</div>\n             </a>\n        </article>\n    </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport './App.css';\nimport Good from './components/Good'\n\n\nexport default function App() {\n  \n  const products = [\n\n    {id:1, imgUrl:\"https://avatars.mds.yandex.net/get-mpic/1861069/img_id2811433203166761085.jpeg/x166_trim\", price:245, productName:\"L`Oreal Paris Exellence\", productLink: \"https://market.yandex.ru/product--l-oreal-paris-excellence-stoikaia-krem-kraska-dlia-volos/212361648\"},\n    {id:2,imgUrl:\"https://avatars.mds.yandex.net/get-mpic/1901647/img_id8435863409791922538.jpeg/x166_trim\", price:143, productName:\"Head & Shoulders\", productLink: \"https://market.yandex.ru/product--head-shoulders-shampun-tsitrusovaia-svezhest/1825853771\"},\n    {id:3,imgUrl:\"https://avatars.mds.yandex.net/get-mpic/331398/img_id8606275073732889790.jpeg/x166_trim\", price:70, productName:\"Bref\", productLink: \"https://market.yandex.ru/product--bref-tualetnyi-blok-sila-aktiv-limonnaia-svezhest/1730991705\"},\n    {id:4,imgUrl:\"https://avatars.mds.yandex.net/get-mpic/1525215/img_id2795445143072269737.png/x166_trim\", price:3051, productName:\"Протеин Optimum Nutretion\", productLink: \"https://market.yandex.ru/product--protein-optimum-nutrition-100-whey-gold-standard-2-225-2-353-kg/1711138831\"},\n\n  ];\n\n  return (\n    <div>\n\n  <div className = \"container\"><h1>Приглядитесь к этим предложениям</h1></div>\n    <div className=\"Block\">\n      <Good  imgUrl = { products[0].imgUrl } price = {products[0].price}  productName ={products[0].productName} productLink = {products[0].productLink} />\n      <Good  imgUrl = { products[1].imgUrl } price = {products[1].price}  productName ={products[1].productName} productLink = {products[1].productLink} />\n      <Good  imgUrl = { products[2].imgUrl } price = {products[2].price}  productName ={products[2].productName} productLink = {products[2].productLink} />\n      <Good  imgUrl = { products[3].imgUrl } price = {products[3].price}  productName ={products[3].productName} productLink = {products[3].productLink} />\n    </div>\n  </div>\n    \n  )\n}\n"],"sourceRoot":""}